{"version":3,"file":"index.C1KcNhCi.js","sources":["../../../src/components/DisappearingMessage/DisappearingMessage.tsx","../../../src/components/Select/Select.tsx","../../../src/pages/EditWordPage/EditWordPage.tsx"],"sourcesContent":["import { type PropsWithChildren, useEffect, useState } from 'react';\nimport clsx from 'clsx';\n\ntype DisappearingMessageProps = PropsWithChildren<{\n  value: number | string | boolean | null;\n  className?: string;\n}>;\n\nexport default function DisappearingMessage(props: DisappearingMessageProps) {\n  const { value, children, className } = props;\n\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    if (value === null) return;\n\n    setIsVisible(true);\n\n    const timer = setTimeout(() => setIsVisible(false), 3000);\n\n    return () => clearTimeout(timer);\n  }, [value]);\n\n  return <div className={clsx('h-10 w-full shrink-0', className)}>{isVisible && children}</div>;\n}\n","import type { ReactNode } from 'react';\nimport clsx from 'clsx';\n\ntype Option = { value: string | number; label: ReactNode };\n\ntype SelectProps = {\n  selectedOption: Option;\n  setOption: any;\n  options: Array<Option>;\n  className?: string;\n};\n\nexport default function Select(props: SelectProps) {\n  const { selectedOption, setOption, options, className } = props;\n\n  return (\n    <select\n      value={selectedOption.value}\n      onChange={(e) => {\n        const selectedValue = e.target.value;\n        const selectedOption = options.find((option) => option.value.toString() === selectedValue.toString());\n        setOption(selectedOption);\n      }}\n      className={clsx(\n        'h-8 cursor-pointer rounded-md border p-1 hover:border-blue-400 focus:border-blue-600 dark:bg-slate-900',\n        className,\n      )}\n    >\n      {options.map(({ value, label }) => (\n        <option key={value} value={value}>\n          {label}\n        </option>\n      ))}\n    </select>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport Button from '@src/components/Button';\nimport DisappearingMessage from '@src/components/DisappearingMessage';\nimport Input from '@src/components/Input';\nimport Select from '@src/components/Select';\nimport { indexDBClient } from '@src/main';\nimport type { Category, Word } from '@src/utils/types';\n\nconst defaultOption = { value: -1, label: '---', word: {} as Word };\n\nexport default function EditWordPage() {\n  const [savedValue, setSavedValue] = useState<number | null>(null);\n  const [selectedWord, setSelectedWord] = useState(() => defaultOption);\n  const [wordOptions, setWordOptions] = useState<Array<{ value: number | string; label: string; word: Word }>>([]);\n  const [spelling, setSpelling] = useState('');\n  const [meaning, setMeaning] = useState<string>('');\n  const [soundsLike, setSoundsLike] = useState<string>('');\n  const [pluralForeignKey, setPluralForeignKey] = useState<string>('');\n  const [singularForeignKey, setSingularForeignKey] = useState<string>('');\n  const [categories, setCategories] = useState<string>('');\n\n  useEffect(() => {\n    if (selectedWord.value === -1) return;\n\n    setSpelling(selectedWord.word.spelling);\n    setSoundsLike(selectedWord.word.soundsLike);\n    setMeaning(selectedWord.word.meaning.join(', '));\n    setCategories(selectedWord.word.categories.join(', '));\n    setPluralForeignKey(selectedWord.word.pluralForeignKey ?? '');\n    setSingularForeignKey(selectedWord.word.singularForeignKey ?? '');\n  }, [selectedWord]);\n\n  useEffect(() => {\n    async function fetchWordOptions() {\n      const allWords = (await indexDBClient.readAll()) as Array<Word>;\n\n      const wordOptions = allWords.map((word, index) => ({ value: index, label: word.meaning[0]!, word }));\n      wordOptions.unshift(defaultOption);\n\n      setWordOptions(wordOptions);\n    }\n\n    fetchWordOptions();\n  }, []);\n\n  const isDisabled = !(spelling && meaning && soundsLike && categories && selectedWord.value > -1);\n\n  const handleEditWordClick = async () => {\n    const updatedWord: Word = {\n      ...selectedWord.word,\n      spelling,\n      meaning: meaning.split(',').map((word) => word.trim()),\n      soundsLike,\n      pluralForeignKey,\n      singularForeignKey,\n      categories: categories.split(',').map((word) => word.trim()) as Array<Category>,\n    };\n\n    await indexDBClient.update(updatedWord.id!, updatedWord);\n\n    setSavedValue(Math.floor(Math.random() * 1000));\n  };\n\n  return (\n    <div className='flex size-full flex-col items-center justify-center gap-10 p-6'>\n      <h2 className='text-xl font-bold'>Edit Word</h2>\n\n      <Select selectedOption={selectedWord} setOption={setSelectedWord} options={wordOptions} />\n\n      <div className='flex flex-col items-start justify-start gap-6 overflow-auto'>\n        <div>\n          <div>Spelling:</div>\n          <Input value={spelling} setValue={setSpelling} />\n        </div>\n\n        <div>\n          <div>Meaning:</div>\n          <Input value={meaning} setValue={setMeaning} />\n        </div>\n\n        <div>\n          <div>Sounds Like:</div>\n          <Input value={soundsLike} setValue={setSoundsLike} />\n        </div>\n\n        <div>\n          <div>Plural Foreign Key:</div>\n          <Input value={pluralForeignKey} setValue={setPluralForeignKey} />\n        </div>\n\n        <div>\n          <div>Singular Foreign Key:</div>\n          <Input value={singularForeignKey} setValue={setSingularForeignKey} />\n        </div>\n\n        <div>\n          <div>Categories:</div>\n          <Input value={categories} setValue={setCategories} />\n        </div>\n      </div>\n\n      <DisappearingMessage value={savedValue} className='flex items-center justify-center'>\n        <div className='h-full'>Word edited successfully!</div>\n      </DisappearingMessage>\n\n      <Button content='Edit word' disabled={isDisabled} onClick={handleEditWordClick} />\n    </div>\n  );\n}\n"],"names":["DisappearingMessage","props","value","children","className","isVisible","setIsVisible","useState","useEffect","timer","jsx","clsx","Select","selectedOption","setOption","options","e","selectedValue","option","label","defaultOption","EditWordPage","savedValue","setSavedValue","selectedWord","setSelectedWord","wordOptions","setWordOptions","spelling","setSpelling","meaning","setMeaning","soundsLike","setSoundsLike","pluralForeignKey","setPluralForeignKey","singularForeignKey","setSingularForeignKey","categories","setCategories","fetchWordOptions","indexDBClient","word","index","isDisabled","handleEditWordClick","updatedWord","jsxs","Input","Button"],"mappings":"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"}