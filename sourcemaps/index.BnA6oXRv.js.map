{"version":3,"file":"index.8kqR6nHQ.js","sources":["../../../src/utils/constants/sentences/index.ts","../../../src/pages/SentencesTestPage/SentencesTestPage.tsx"],"sourcesContent":["import { Category, Word } from '@src/utils/types';\n\n// • where is the toilet/bathroom? - где туалет?\n// • you are not my father - ты не мой папа\n// • do you have water? - у тебя есть вода?\n// • this person is a doctor - етот человек доктор\n// • Excuse me, where is my tea? - извините, где мой чай?\n// • I do no eat soup - я не ем суп\n// • our plan - наш план\n// • our notebooks - наши тетради\n// • Does she drink coffee? - Она пьёт кофи?\n// • Does he drink coffee? - Он пьёт кофи?\n// • where is my sister? - где мая сестра?\n// • where are my sisters? - где мои сёстры?\n// • this is my friend, mark - это мой друг, марк\n// • sorry for my bad grammer - извините за мою плохую грамматику\n// • Anton is already in the office - антон уже в офис\n// • I am in the city now - Я сейчас в городе\n// • Are you at school? - ты в школе?\n// • Yes, Petach Tikva is far away - Да, Petach Tikva далеко\n// • what is in the park? - что в етом парке?\n// • are you at home or already at work? - ты дома или уже на работе?\n\n// у меня есть - i have\n// у тебя есть - you have\n// у нас есть - we have\n// у него есть - he has\n// у нёо ??? есть - she has\n\n// .--- e at the end ---\n// • Are you at school? - ты в школе?\n// • I am in the park - я в парке\n// • mom & dad are in the park - мама и папн в парке\n// • the plate is on the table - тарелка на столе (notice the e)\n// • Are you at work? - ты на работе?\n// • I am already at work - я уже на работе\n// • he is in the bathroom - он в туалете\n// .--- a at the end ---\n// • mom is at home - мама дома\n// • I am not home - я не дома\n// • Yulia is already at home - юлия уже дома\n// • are you at home? - ты дома?\n// .--- ETOM ---\n// • my plate is on this table - моя тарелка на этом столе\n// • are you in this cafe? - Ты в этом кафе?\n// • what is in this park? - что в етом парке?\n// .--- a at the end ---\n// • we are in the cafe - мы в кафе\n\nexport const sentences: Array<Word> = [\n  {\n    spelling: 'мой брат живёт в Москве',\n    meaning: ['my brother lives in Moscow'],\n    points: 0,\n    categories: [Category.Sentences],\n  },\n  {\n    spelling: 'кто здесь живёт',\n    meaning: ['who lives here?'],\n    points: 0,\n    categories: [Category.Sentences],\n  },\n  {\n    spelling: 'марк в россии сейчас',\n    meaning: ['Mark is in Russia now'],\n    points: 0,\n    categories: [Category.Sentences],\n  },\n  {\n    spelling: 'я не в москве сейчас',\n    meaning: ['I am not in Moscow now'],\n    points: 0,\n    categories: [Category.Sentences],\n  },\n  {\n    spelling: 'мы в америке сейчас',\n    meaning: ['we are in America now'],\n    points: 0,\n    categories: [Category.Sentences],\n  },\n  {\n    spelling: 'я на работе сейчас',\n    meaning: ['I am at work now'],\n    points: 0,\n    categories: [Category.Sentences],\n  },\n  {\n    spelling: 'ты уже дома',\n    meaning: ['are you at home already?'],\n    points: 0,\n    categories: [Category.Sentences],\n  },\n  {\n    spelling: 'берлин город в германии',\n    meaning: ['Berlin is a city in Germany'],\n    points: 0,\n    categories: [Category.Sentences],\n  },\n  {\n    spelling: 'катя не живёт в городе',\n    meaning: ['katia does not live in the city'],\n    points: 0,\n    categories: [Category.Sentences],\n  },\n  {\n    spelling: 'тарелка на месте',\n    meaning: ['the plate is in its place'],\n    points: 0,\n    categories: [Category.Sentences],\n  },\n  {\n    spelling: 'мои брат и сестра в школе',\n    meaning: ['my brother and sister are at school'],\n    points: 0,\n    categories: [Category.Sentences],\n  },\n  {\n    spelling: 'эта кровать не на месте',\n    meaning: ['this bed is not in its place'],\n    points: 0,\n    categories: [Category.Sentences],\n  },\n  {\n    spelling: 'Я хочу знать',\n    meaning: ['i want to know'],\n    points: 0,\n    categories: [Category.Sentences],\n  },\n  {\n    spelling: 'я знал это',\n    meaning: ['I knew that'],\n    points: 0,\n    categories: [Category.Sentences],\n  },\n];\n","import { useId, useMemo, useState } from 'react';\nimport Button from '@src/components/Button';\nimport Input from '@src/components/Input';\nimport Retry from '@src/components/svgs/Retry';\nimport VInCircle from '@src/components/svgs/VInCircle';\nimport XMark from '@src/components/svgs/XMark';\nimport Tooltip from '@src/components/Tooltip';\nimport TooltipTrigger from '@src/components/TooltipTrigger';\nimport { sentences } from '@src/utils/constants/sentences';\nimport { allVerbs } from '@src/utils/constants/wordBank/allVerbs';\nimport { SelectionStrategies, selectKWords } from '@src/utils/selectKWords';\nimport { Word } from '@src/utils/types';\n\nconst questionsInTestCount = 10;\nconst emptyAnswers = Array.from(Array(questionsInTestCount)).map(() => '');\n\nexport default function SentencesTestPage() {\n  const groupId = useId();\n  const [shuffleValue, setShuffleValue] = useState<number>(0);\n  const [showResults, setShowResults] = useState<boolean>();\n\n  const randomQuestions = useMemo(\n    () =>\n      selectKWords({\n        data: sentences as Array<Word>,\n        strategy: SelectionStrategies.Knowledge,\n        wordCount: questionsInTestCount,\n      }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [shuffleValue],\n  );\n\n  const [answers, setAnswers] = useState<Array<string>>(() => emptyAnswers);\n\n  const handleCheckClick = () => setShowResults(true);\n\n  const handleNextTestClick = () => {\n    setAnswers(emptyAnswers);\n    setShowResults(false);\n    setShuffleValue(Math.random());\n  };\n\n  const handleRetryTestClick = () => {\n    setAnswers(emptyAnswers);\n    setShowResults(false);\n  };\n\n  if (!allVerbs.length) return null;\n\n  return (\n    <div className='flex size-full flex-col items-center justify-center gap-10 p-6'>\n      <div className='flex w-full max-w-md flex-col gap-3 rounded-md border p-4'>\n        {randomQuestions.map(({ spelling, meaning, soundsLike }, index) => {\n          const isCorrectAnswer = spelling.toLowerCase() === answers[index]?.toLowerCase();\n\n          return (\n            <div key={index} className='flex h-10 w-full items-center justify-between gap-10'>\n              <div title={soundsLike}>{meaning[0]}</div>\n\n              <div className='flex h-full items-center gap-2'>\n                <Input\n                  value={answers[index]!}\n                  setValue={(value) => setAnswers((prevAnswers) => prevAnswers.with(index, value))}\n                  className='!w-52'\n                />\n\n                <div className='h-full w-6'>\n                  <TooltipTrigger groupId={groupId} contentOverride={spelling}>\n                    {showResults && (\n                      <div className='flex h-full items-center justify-center'>\n                        {isCorrectAnswer ? (\n                          <VInCircle className='h-1/2' borderColor='#19d23a' color='#19d23a' />\n                        ) : (\n                          <XMark className='h-1/2 stroke-red-500' />\n                        )}\n                      </div>\n                    )}\n                  </TooltipTrigger>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n\n        <Tooltip\n          groupId={groupId}\n          isClickable\n          render={({ content }) => (\n            <div className='min-w-32'>\n              <div className='flex h-6 items-center rounded-t-lg bg-neutral-900 p-2'>Answer</div>\n              <div className='rounded-b-lg bg-white p-4 text-black'>{content}</div>\n            </div>\n          )}\n          borderRadius={9}\n          border='1px solid #999'\n          arrowColor='white'\n          className='shadow-dark-xs'\n        />\n      </div>\n\n      <div className='flex w-full max-w-md items-center justify-between gap-4'>\n        <Button content='Check' onClick={handleCheckClick} className='h-10 w-24' />\n\n        <Button\n          content='retry'\n          onClick={handleRetryTestClick}\n          className='flex flex-col-reverse items-center justify-center gap-1 bg-neutral-600 hover:bg-neutral-700 active:bg-neutral-800'\n        >\n          <Retry className='size-4' />\n        </Button>\n\n        <Button\n          content='Next'\n          onClick={handleNextTestClick}\n          className='h-10 w-24 bg-green-600 hover:bg-green-700 active:bg-green-800'\n        />\n      </div>\n    </div>\n  );\n}\n"],"names":["sentences","Category","questionsInTestCount","emptyAnswers","SentencesTestPage","groupId","useId","shuffleValue","setShuffleValue","useState","showResults","setShowResults","randomQuestions","useMemo","selectKWords","SelectionStrategies","answers","setAnswers","handleCheckClick","handleNextTestClick","handleRetryTestClick","allVerbs","jsxs","spelling","meaning","soundsLike","index","isCorrectAnswer","jsx","Input","value","prevAnswers","TooltipTrigger","VInCircle","XMark","Tooltip","content","Button","Retry"],"mappings":"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"}