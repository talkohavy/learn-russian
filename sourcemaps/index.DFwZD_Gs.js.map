{"version":3,"file":"index.djkzBd23.js","sources":["../../../src/components/Button/Button.tsx","../../../src/components/Input/Input.tsx","../../../src/components/svgs/VInCircle/VInCircle.tsx","../../../src/components/svgs/XMark/XMark.tsx","../../../src/utils/constants/wordBank/animals.ts","../../../src/utils/constants/wordBank/bodyRelation.ts","../../../src/utils/constants/wordBank/countries.ts","../../../src/utils/constants/wordBank/drinks.ts","../../../src/utils/constants/wordBank/food.ts","../../../src/utils/constants/wordBank/greetings.ts","../../../src/utils/constants/wordBank/jobs.ts","../../../src/utils/constants/wordBank/other.ts","../../../src/utils/constants/wordBank/questionWord.ts","../../../src/utils/constants/wordBank/index.ts","../../../src/utils/getRandomObjects.ts","../../../src/pages/Test/Test.tsx"],"sourcesContent":["import type { ReactNode } from 'react';\nimport clsx from 'clsx';\n\ntype ButtonProps = {\n  onClick: (e: any) => void;\n  content: ReactNode;\n  disabled?: boolean;\n  className?: string;\n};\n\nexport default function Button(props: ButtonProps) {\n  const { content, onClick, disabled, className } = props;\n\n  return (\n    <button\n      type='button'\n      onClick={onClick}\n      disabled={disabled}\n      className={clsx(\n        'cursor-pointer rounded-md border border-black bg-blue-500 px-2 py-1 text-white hover:rounded-lg hover:bg-blue-600 active:bg-blue-700',\n        className,\n      )}\n    >\n      {content}\n    </button>\n  );\n}\n","import clsx from 'clsx';\n\ntype InputProps = {\n  value: string;\n  setValue: (value: any) => void;\n  type?: 'text';\n  placeholder?: React.HTMLInputTypeAttribute;\n  disabled?: boolean;\n  className?: string;\n};\n\nexport default function Input(props: InputProps) {\n  const { value, setValue, type = 'text', placeholder = '', disabled, className } = props;\n\n  return (\n    <input\n      type={type}\n      value={value}\n      onChange={(e) => setValue(e.target.value)}\n      placeholder={placeholder}\n      disabled={disabled}\n      className={clsx('h-10 w-72 rounded-md border border-black p-2', className)}\n    />\n  );\n}\n","type VInCircleProps = {\n  color?: string;\n  fillColor?: string;\n  borderColor?: string;\n  title?: string;\n  className?: string;\n};\n\nexport default function VInCircle(props: VInCircleProps) {\n  const { color = 'black', fillColor = 'none', borderColor, title = 'v in a circle', className } = props;\n\n  return (\n    <svg\n      viewBox='0 0 20 20'\n      stroke={color}\n      strokeLinecap='round'\n      strokeLinejoin='round'\n      strokeWidth='1.5'\n      className={className}\n    >\n      <title>{title}</title>\n\n      <circle cx='10' cy='10' r='9' stroke={borderColor || color} fill={fillColor} />\n      <line x1='8.7' y1='13' x2='14.2' y2='7' />\n      <line x1='5.9' y1='10.33' x2='8.7' y2='13' />\n    </svg>\n  );\n}\n","type XMarkProps = {\n  color?: string;\n  title?: string;\n  className?: string;\n};\n\nexport default function XMark(props: XMarkProps) {\n  const { color = 'currentColor', className, title } = props;\n\n  return (\n    <svg viewBox='0 0 100 100' strokeWidth={8} stroke={color} strokeLinecap='round' className={className}>\n      <title>{title}</title>\n\n      <line x1='20' y1='20' x2='80' y2='80' />\n      <line x1='20' y1='80' x2='80' y2='20' />\n    </svg>\n  );\n}\n","import { Category, type Word } from '@src/utils/types';\n\nexport const animals: Array<Word> = [\n  {\n    main: {\n      spelling: 'лошадь',\n      soundsLike: '**LO**SHED',\n      meaning: ['horse'],\n    },\n    plural: {\n      spelling: 'лошади',\n      soundsLike: '**LO**SHEDI',\n      meaning: ['horses'],\n    },\n    categories: [Category.Animals],\n  },\n  {\n    main: {\n      spelling: 'кошка',\n      soundsLike: '**KO**SHKA',\n      meaning: ['cat'],\n    },\n    plural: {\n      spelling: 'кошки',\n      soundsLike: '**KO**SHKI',\n      meaning: ['cats'],\n    },\n    categories: [Category.Animals],\n  },\n  {\n    main: {\n      spelling: 'сабака',\n      soundsLike: 'SA**BA**KA',\n      meaning: ['dog'],\n    },\n    categories: [Category.Animals],\n  },\n  {\n    main: {\n      spelling: 'орёл',\n      soundsLike: 'AR**YOL**',\n      meaning: ['eagle'],\n    },\n    categories: [Category.Animals],\n  },\n  // {\n  //   main: {\n  //     spelling: '',\n  //     soundsLike: '',\n  //     meaning: [''],\n  //   },\n  //   categories: [Category.Animals],\n  // },\n];\n","import { Category } from '@src/utils/types';\n\nexport const bodyRelation = [\n  {\n    main: {\n      spelling: 'я',\n      soundsLike: 'YA',\n      meaning: ['I'],\n    },\n    categories: [Category.BodyRelation],\n  },\n  {\n    main: {\n      spelling: 'он',\n      soundsLike: 'ON',\n      meaning: ['he'],\n    },\n    categories: [Category.BodyRelation],\n  },\n  {\n    main: {\n      spelling: 'она',\n      soundsLike: 'A**NA**',\n      meaning: ['she'],\n    },\n    categories: [Category.BodyRelation],\n  },\n  {\n    main: {\n      spelling: 'мы',\n      soundsLike: 'MUI',\n      meaning: ['we'],\n    },\n    categories: [Category.BodyRelation],\n  },\n  {\n    main: {\n      spelling: 'они',\n      soundsLike: 'ANI',\n      meaning: ['they'],\n    },\n    categories: [Category.BodyRelation],\n  },\n  {\n    main: {\n      spelling: 'ты',\n      soundsLike: 'TI',\n      meaning: ['you (single)'],\n    },\n    categories: [Category.BodyRelation],\n  },\n  {\n    main: {\n      spelling: 'вы',\n      soundsLike: 'VUI',\n      meaning: ['you (plural)'],\n    },\n    categories: [Category.BodyRelation],\n  },\n];\n","import { Category, type Word } from '@src/utils/types';\n\nexport const countries: Array<Word> = [\n  {\n    main: {\n      spelling: 'америка',\n      soundsLike: 'A**ME**RIKA',\n      meaning: ['America'],\n    },\n    categories: [Category.Countries],\n  },\n  {\n    main: {\n      spelling: 'бразилия',\n      soundsLike: 'BRA**ZIL**IA',\n      meaning: ['Brazil'],\n    },\n    categories: [Category.Countries],\n  },\n  {\n    main: {\n      spelling: 'канада',\n      soundsLike: 'KA**NA**DA',\n      meaning: ['Canada'],\n    },\n    categories: [Category.Countries],\n  },\n  {\n    main: {\n      spelling: 'россия',\n      soundsLike: 'RA**SIA**',\n      meaning: ['Russia'],\n    },\n    categories: [Category.Countries],\n  },\n  {\n    main: {\n      spelling: 'италия',\n      soundsLike: 'I**TA**LIYA',\n      meaning: ['Italy'],\n    },\n    categories: [Category.Countries],\n  },\n  {\n    main: {\n      spelling: 'монголия',\n      soundsLike: 'MAN**GO**LIYA',\n      meaning: ['Mongolia'],\n    },\n    categories: [Category.Countries],\n  },\n  {\n    main: {\n      spelling: 'украина',\n      soundsLike: 'UKRA**INA**',\n      meaning: ['Ukraine'],\n    },\n    categories: [Category.Countries],\n  },\n  // {\n  //   main: {\n  //     spelling: '',\n  //     soundsLike: '',\n  //     meaning: [''],\n  //   },\n  //   categories: [Category.Countries],\n  // },\n];\n","import { Category } from '@src/utils/types';\n\nexport const drinks = [\n  {\n    main: {\n      spelling: 'чай',\n      soundsLike: 'CHAI',\n      meaning: ['tea'],\n    },\n    categories: [Category.Drinks],\n  },\n  {\n    main: {\n      spelling: 'кофе',\n      soundsLike: '**KO**FИ',\n      meaning: ['coffee'],\n    },\n    categories: [Category.Drinks],\n  },\n  {\n    main: {\n      spelling: 'сок',\n      soundsLike: 'SOK',\n      meaning: ['juice'],\n    },\n    categories: [Category.Drinks],\n  },\n  {\n    main: {\n      spelling: 'вино',\n      soundsLike: 'VI**NO**',\n      meaning: ['wine'],\n    },\n    categories: [Category.Drinks],\n  },\n  {\n    main: {\n      spelling: 'вода',\n      soundsLike: 'VADA',\n      meaning: ['water'],\n    },\n    categories: [Category.Drinks, Category.Other],\n  },\n];\n","import { Category, type Word } from '@src/utils/types';\n\nexport const food: Array<Word> = [\n  {\n    main: {\n      spelling: 'яблокo',\n      soundsLike: '**YA**BLAKA',\n      meaning: ['apple'],\n    },\n    plural: {\n      spelling: 'яблоки',\n      soundsLike: '**YA**BLAKI',\n      meaning: ['appleс'],\n    },\n    categories: [Category.Food],\n  },\n  {\n    main: {\n      spelling: 'яйцо',\n      soundsLike: '*YA**ICHO',\n      meaning: ['egg'],\n    },\n    plural: {\n      spelling: 'яйца',\n      soundsLike: '**YA**ICHA',\n      meaning: ['eggs'],\n    },\n    categories: [Category.Food],\n  },\n  {\n    main: {\n      spelling: 'пицца',\n      soundsLike: 'PICHA',\n      meaning: ['pizza'],\n    },\n    categories: [Category.Food],\n  },\n  {\n    main: {\n      spelling: 'хлеб',\n      soundsLike: 'HLEB',\n      meaning: ['bread'],\n    },\n    categories: [Category.Food],\n  },\n  {\n    main: {\n      spelling: 'банан',\n      soundsLike: 'BANAN',\n      meaning: ['banana'],\n    },\n    categories: [Category.Food],\n  },\n  {\n    main: {\n      spelling: 'мясо',\n      soundsLike: 'MI**YA**SA',\n      meaning: ['meat'],\n    },\n    categories: [Category.Food],\n  },\n  {\n    main: {\n      spelling: 'суп',\n      soundsLike: 'SUP',\n      meaning: ['soup'],\n    },\n    categories: [Category.Food],\n  },\n  {\n    main: {\n      spelling: 'молоко',\n      soundsLike: 'MALA**KO**',\n      meaning: ['milk'],\n    },\n    categories: [Category.Food],\n  },\n  {\n    main: {\n      spelling: 'сыр',\n      soundsLike: 'SIER',\n      meaning: ['cheese'],\n    },\n    categories: [Category.Food],\n  },\n  {\n    main: {\n      spelling: 'бекон',\n      soundsLike: 'BICON',\n      meaning: ['bacon'],\n    },\n    categories: [Category.Food],\n  },\n  {\n    main: {\n      spelling: 'салат',\n      soundsLike: 'SALAT',\n      meaning: ['salad'],\n    },\n    categories: [Category.Food],\n  },\n  // {\n  //   main: {\n  //     spelling: '',\n  //     soundsLike: '',\n  //     meaning: [''],\n  //   },\n  //   categories: [Category.Food],\n  // },\n];\n","import { Category, type Word } from '@src/utils/types';\n\nexport const greetings: Array<Word> = [\n  {\n    main: {\n      spelling: 'до свидания',\n      soundsLike: 'DA SVIDANIYA',\n      meaning: ['goodbye'],\n    },\n    categories: [Category.Greetings],\n  },\n  {\n    main: {\n      spelling: 'добро пожаловать',\n      soundsLike: 'DAB**RO** PA**ZHA**LOVET',\n      meaning: ['welcome'],\n    },\n    categories: [Category.Greetings],\n  },\n  {\n    main: {\n      spelling: 'до завтра',\n      soundsLike: 'DA ZAVTRA',\n      meaning: ['see you tomorrow'],\n    },\n    categories: [Category.Greetings],\n  },\n  {\n    main: {\n      spelling: 'как дела',\n      soundsLike: 'KAK DYELA',\n      meaning: ['how are you?'],\n    },\n    categories: [Category.Greetings],\n  },\n  {\n    main: {\n      spelling: 'хорошо',\n      soundsLike: 'HARASHO',\n      meaning: ['fine', 'ok'],\n    },\n    categories: [Category.Greetings],\n  },\n  {\n    main: {\n      spelling: 'SPAKOINI NOCHI',\n      soundsLike: 'спакойной ночи',\n      meaning: ['good night'],\n    },\n    categories: [Category.Greetings],\n  },\n  {\n    main: {\n      spelling: 'пока',\n      soundsLike: 'PA**KA**',\n      meaning: ['bye'],\n    },\n    categories: [Category.Greetings],\n  },\n  {\n    main: {\n      spelling: 'пожалуйста',\n      soundsLike: 'PA**ZHA**LUISTA',\n      meaning: ['please'],\n    },\n    categories: [Category.Greetings],\n  },\n  {\n    main: {\n      spelling: 'извините',\n      soundsLike: 'IZVINITY',\n      meaning: ['excuse me', 'sorry'],\n    },\n    categories: [Category.Greetings],\n  },\n  {\n    main: {\n      spelling: 'прибет',\n      soundsLike: '**PRI**VYET',\n      meaning: ['hi', 'hello'],\n    },\n    categories: [Category.Greetings],\n  },\n  {\n    main: {\n      spelling: 'спасибо',\n      soundsLike: 'SPA**SI**BA',\n      meaning: ['thank you'],\n    },\n    categories: [Category.Greetings],\n  },\n  // {\n  //   main: {\n  //     spelling: '',\n  //     soundsLike: '',\n  //     meaning: [''],\n  //   },\n  //   categories: [Category.Greetings],\n  // },\n];\n","import { Category } from '@src/utils/types';\n\nexport const jobs = [\n  {\n    main: {\n      spelling: 'актёр',\n      soundsLike: 'AKTIOR',\n      meaning: ['actor'],\n    },\n    plural: {\n      spelling: 'актёры',\n      soundsLike: 'AKTYORI',\n      meaning: ['actors'],\n    },\n    categories: [Category.Jobs],\n  },\n  {\n    main: {\n      spelling: 'тренер',\n      soundsLike: '**TRAI**NER',\n      meaning: ['coach'],\n    },\n    categories: [Category.Jobs],\n  },\n  {\n    main: {\n      spelling: 'капитан',\n      soundsLike: '**KA**PITAN',\n      meaning: ['captain'],\n    },\n    categories: [Category.Jobs],\n  },\n  {\n    main: {\n      spelling: 'повар',\n      soundsLike: '**PO**VAR',\n      meaning: ['cook'],\n    },\n    categories: [Category.Jobs],\n  },\n  {\n    main: {\n      spelling: 'доктор',\n      soundsLike: '**DOK**TOR',\n      meaning: ['doctor'],\n    },\n    categories: [Category.Jobs],\n  },\n  {\n    main: {\n      spelling: 'инженер',\n      soundsLike: '**EN**ZHINIR',\n      meaning: ['engineer'],\n    },\n    categories: [Category.Jobs],\n  },\n  {\n    main: {\n      spelling: 'учитель',\n      soundsLike: \"U**CH'I**TYEL\",\n      meaning: ['teacher'],\n    },\n    categories: [Category.Jobs],\n  },\n  {\n    main: {\n      spelling: 'психолог',\n      soundsLike: 'PSI**HO**LOG',\n      meaning: ['psychologist'],\n    },\n    categories: [Category.Jobs],\n  },\n  {\n    main: {\n      spelling: 'политик',\n      soundsLike: 'PA**LI**TIC',\n      meaning: ['politician'],\n    },\n    categories: [Category.Jobs],\n  },\n  {\n    main: {\n      spelling: 'музыкант',\n      soundsLike: 'MOOZI**KANT**',\n      meaning: ['musician'],\n    },\n    categories: [Category.Jobs],\n  },\n  {\n    main: {\n      spelling: 'пилот',\n      soundsLike: 'PI**LOT**',\n      meaning: ['pilot'],\n    },\n    categories: [Category.Jobs],\n  },\n];\n","import { Category } from '@src/utils/types';\n\nexport const other = [\n  {\n    main: {\n      spelling: 'друг',\n      soundsLike: 'DROOG',\n      meaning: ['friend'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'здесь',\n      soundsLike: 'ZDIS',\n      meaning: ['here'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'там',\n      soundsLike: 'TAM',\n      meaning: ['there'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'это',\n      soundsLike: 'ETA', // ETAT ETI\n      meaning: ['this'],\n      // metadata: ['етот', 'эти']\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'тарелка',\n      soundsLike: 'TAREILKA',\n      meaning: ['plate'],\n    },\n    plural: {\n      spelling: 'тарелки',\n      soundsLike: 'TAREILKI',\n      meaning: ['plates'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'мальчик',\n      soundsLike: '**MAL**CHIK',\n      meaning: ['boy'],\n    },\n    plural: {\n      spelling: 'мальчики',\n      soundsLike: '**MAL**CHIKI',\n      meaning: ['boys'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'девочкa',\n      soundsLike: '**DYE**VOCHKA',\n      meaning: ['girl'],\n    },\n    plural: {\n      spelling: 'девочки',\n      soundsLike: '**DYE**VOCHKI',\n      meaning: ['girls'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'дети',\n      soundsLike: '**DEY**TI',\n      meaning: ['children'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'мужчина',\n      soundsLike: 'MUI**SHI**NA',\n      meaning: ['man'],\n    },\n    plural: {\n      spelling: 'мужчины',\n      soundsLike: 'MUI**SHI**NI',\n      meaning: ['men'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'женщинa',\n      soundsLike: '**ZHEN**SHINA',\n      meaning: ['woman'],\n    },\n    plural: {\n      spelling: 'женщины',\n      soundsLike: '**ZHEN**SHINIE',\n      meaning: ['women'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'дом',\n      soundsLike: 'DOM',\n      meaning: ['house'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'офис',\n      soundsLike: '**O**FIS',\n      meaning: ['office'],\n    },\n    plural: {\n      spelling: 'офисы',\n      soundsLike: '**O**FISI',\n      meaning: ['offices'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'метро',\n      soundsLike: 'MET**RO**',\n      meaning: ['subway'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'человек',\n      soundsLike: 'CHELA**VEK**',\n      meaning: ['person'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'озеро',\n      soundsLike: '**O**ZIRA',\n      meaning: ['lake'],\n    },\n    plural: {\n      spelling: 'озёра',\n      soundsLike: 'AZ**YO**RA',\n      meaning: ['lakes'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'тетрадь',\n      soundsLike: 'TET**RAD**',\n      meaning: ['notebook'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'стол',\n      soundsLike: 'STOL',\n      meaning: ['table'],\n    },\n    plural: {\n      spelling: 'столы',\n      soundsLike: 'STA**LUI**',\n      meaning: ['tables'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'полотенце',\n      soundsLike: 'PALA**TIEN**TSYE',\n      meaning: ['towel'],\n    },\n    plural: {\n      spelling: 'полотенца',\n      soundsLike: 'PALA**TIEN**TSA',\n      meaning: ['towels'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'телефон',\n      soundsLike: 'TYELEPHON',\n      meaning: ['phone'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'такси',\n      soundsLike: 'TAKSI',\n      meaning: ['taxi'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'план',\n      soundsLike: 'PLAN',\n      meaning: ['plan'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'ребёнок',\n      soundsLike: 'REB**YO**NAK',\n      meaning: ['child', 'baby'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'велосипед',\n      soundsLike: 'VELOSIP**YED**',\n      meaning: ['bicycle'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'ну',\n      soundsLike: 'NU',\n      meaning: ['well'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'всё',\n      soundsLike: 'VSO',\n      meaning: ['everything', 'all', 'anything'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'уже',\n      soundsLike: 'UZHE',\n      meaning: ['already'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'конечно',\n      soundsLike: 'KANI**YECH**NA',\n      meaning: ['of course'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'утро',\n      soundsLike: 'UTRA',\n      meaning: ['morning'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'кафе',\n      soundsLike: 'KAFE',\n      meaning: ['cafe'],\n    },\n    categories: [Category.Other],\n  },\n\n  {\n    main: {\n      spelling: 'парк',\n      soundsLike: 'PARK',\n      meaning: ['park'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'добрый',\n      soundsLike: 'DOBREY',\n      meaning: ['good', 'kind', 'nice'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'дела',\n      soundsLike: 'DYELA',\n      meaning: ['matter', 'business', 'case'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'день',\n      soundsLike: 'DYЕN',\n      meaning: ['day'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'вечер',\n      soundsLike: '**VYE**CHER',\n      meaning: ['evening'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'город',\n      soundsLike: '**GO**RAD',\n      meaning: ['city'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'свитер',\n      soundsLike: '**SVI**TER',\n      meaning: ['Sweater'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'или',\n      soundsLike: '**I**LI',\n      meaning: ['or'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'рюкзак',\n      soundsLike: '**RIU**KZAK',\n      meaning: ['backpack'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'да',\n      soundsLike: 'DA',\n      meaning: ['yes'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'нет',\n      soundsLike: 'NYET',\n      meaning: ['no'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'меню',\n      soundsLike: 'MENU',\n      meaning: ['menu'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'сон',\n      soundsLike: 'SON',\n      meaning: ['dream'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'маленький',\n      soundsLike: 'MALYENKI',\n      meaning: ['small'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'жаль',\n      soundsLike: 'ZHAL',\n      meaning: ['what a pity', 'it is a pitty', 'sorry'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'йога',\n      soundsLike: 'YOGA',\n      meaning: ['yoga'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'шорты',\n      soundsLike: 'SHORTI',\n      meaning: ['shorts'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'кробать',\n      soundsLike: 'KRA**VAT**',\n      meaning: ['bed'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'тоже',\n      soundsLike: '**TO**ZHE',\n      meaning: ['also', 'too'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'туалет',\n      soundsLike: '**TU**ALET',\n      meaning: ['toilet', 'bathroom'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'камень',\n      soundsLike: '**KA**MIN',\n      meaning: ['stone'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'дверь',\n      soundsLike: 'DVIR',\n      meaning: ['door'],\n    },\n    plural: {\n      spelling: 'двери',\n      soundsLike: 'DVIRI',\n      meaning: ['doors'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'карандаш',\n      soundsLike: 'KARAN**DASH**',\n      meaning: ['pencil'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'дерево',\n      soundsLike: 'DYEREVA',\n      meaning: ['tree'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'далеко',\n      soundsLike: 'DALIE**KO**',\n      meaning: ['far away'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: 'площадь',\n      soundsLike: '**PLO**SHID',\n      meaning: ['the area', 'square'],\n    },\n    categories: [Category.Other],\n  },\n  {\n    main: {\n      spelling: '',\n      soundsLike: '',\n      meaning: ['on', 'is on', 'there is...on'],\n    },\n    categories: [Category.Other],\n  },\n  // {\n  //   main: {\n  //     spelling: '',\n  //     soundsLike: '',\n  //     meaning: [''],\n  //   },\n  //   categories: [Category.Other],\n  // },\n];\n","import { Category } from '@src/utils/types';\n\nexport const questionWord = [\n  {\n    main: {\n      spelling: 'где',\n      soundsLike: 'GDE',\n      meaning: ['where'],\n    },\n    categories: [Category.QuestionWord],\n  },\n  {\n    main: {\n      spelling: 'кто',\n      soundsLike: 'KTO',\n      meaning: ['who'],\n    },\n    categories: [Category.QuestionWord],\n  },\n  {\n    main: {\n      spelling: 'что',\n      soundsLike: 'SHTO',\n      meaning: ['what'],\n    },\n    categories: [Category.QuestionWord],\n  },\n  {\n    main: {\n      spelling: 'когда',\n      soundsLike: 'KAGDA',\n      meaning: ['when'],\n    },\n    categories: [Category.QuestionWord],\n  },\n  {\n    main: {\n      spelling: 'который',\n      soundsLike: 'KATORI',\n      meaning: ['which'],\n    },\n    categories: [Category.QuestionWord],\n  },\n  {\n    main: {\n      spelling: 'почему',\n      soundsLike: 'PACHIMU',\n      meaning: ['why'],\n    },\n    categories: [Category.QuestionWord],\n  },\n  {\n    main: {\n      spelling: 'сколько',\n      soundsLike: '**SKO**LKA',\n      meaning: ['how much'],\n    },\n    categories: [Category.QuestionWord],\n  },\n  {\n    main: {\n      spelling: 'как',\n      soundsLike: 'KAK',\n      meaning: ['how'],\n    },\n    categories: [Category.QuestionWord],\n  },\n];\n","import { animals } from './animals';\nimport { bodyRelation } from './bodyRelation';\nimport { countries } from './countries';\nimport { drinks } from './drinks';\nimport { food } from './food';\nimport { greetings } from './greetings';\nimport { jobs } from './jobs';\nimport { other } from './other';\nimport { questionWord } from './questionWord';\n\nexport const allWords = [\n  ...animals,\n  ...food,\n  ...drinks,\n  ...greetings,\n  ...jobs,\n  ...bodyRelation,\n  ...questionWord,\n  ...countries,\n  ...other,\n];\n","function getRandomObjects<T = any>(arr: Array<T>, itemsCount = 10) {\n  if (arr.length <= itemsCount) return arr;\n\n  const randomObjects: Array<T> = [];\n\n  const copyArr = [...arr];\n\n  for (let i = 0; i < itemsCount; i++) {\n    const randomIndex = Math.floor(Math.random() * copyArr.length);\n\n    randomObjects.push(copyArr.splice(randomIndex, 1)[0]!);\n  }\n\n  return randomObjects;\n}\n\nexport { getRandomObjects };\n","import { useMemo, useState } from 'react';\nimport Button from '@src/components/Button';\nimport Input from '@src/components/Input';\nimport VInCircle from '@src/components/svgs/VInCircle';\nimport XMark from '@src/components/svgs/XMark';\nimport { allWords } from '@src/utils/constants/wordBank';\nimport { getRandomObjects } from '@src/utils/getRandomObjects';\nimport type { Word } from '@src/utils/types';\n\nexport default function TestPage() {\n  const [showResults, setShowResults] = useState<boolean>();\n\n  const randomWords = useMemo(() => getRandomObjects<Word>(allWords), []);\n\n  const [answers, setAnswers] = useState<Array<string>>(() => Array.from(Array(randomWords.length)).map(() => ''));\n\n  const handleTestClick = () => setShowResults(true);\n\n  return (\n    <div className='flex size-full flex-col items-center justify-center gap-10 p-6'>\n      <div className='flex w-full max-w-md flex-col gap-3 border'>\n        {randomWords.map(({ main }, index) => {\n          const isCorrectAnswer = main.spelling === answers[index];\n\n          return (\n            <div key={index} className='flex h-10 w-full items-center justify-between gap-10'>\n              <div>{main.meaning[0]}</div>\n\n              <div className='flex h-full items-center gap-2'>\n                <Input\n                  value={answers[index]!}\n                  setValue={(value) => setAnswers((prevAnswers) => prevAnswers.with(index, value))}\n                  className='!w-52'\n                />\n\n                <div className='h-full w-12'>\n                  {showResults && (\n                    <div className='flex h-full items-center justify-center'>\n                      {isCorrectAnswer ? (\n                        <VInCircle className='h-1/2' borderColor='#19d23a' color='#19d23a' />\n                      ) : (\n                        <XMark className='h-1/2 stroke-red-500' />\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      <Button content='Check' onClick={handleTestClick} />\n    </div>\n  );\n}\n"],"names":["Button","props","content","onClick","disabled","className","jsx","clsx","Input","value","setValue","type","placeholder","e","VInCircle","color","fillColor","borderColor","title","jsxs","XMark","animals","Category","bodyRelation","countries","drinks","food","greetings","jobs","other","questionWord","allWords","getRandomObjects","arr","itemsCount","randomObjects","copyArr","i","randomIndex","TestPage","showResults","setShowResults","useState","randomWords","useMemo","answers","setAnswers","handleTestClick","main","index","isCorrectAnswer","prevAnswers"],"mappings":"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"}